name: build-ami

env:
  AWS_REGION: us-east-1

on:
  push:
    branches: [main]

jobs:
  ci_cd:
    name: packer-build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Initialize packer
        uses: hashicorp/packer-github-actions@master
        with:
          command: init
          target: webapp-ami.pkr.hcl
        env:
          PACKET_LOG: 1

      - name: Build the AMI
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort"
          target: webapp-ami.pkr.hcl

        env:
          PACKET_LOG: 1

  update_launch_template:
    name: Update launch template
    runs-on: ubuntu-latest
    needs: packer-build

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEMO_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEMO_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install AWS CLI
        run: |
          sudo apt-get update && sudo apt-get install -y awscli

      - name: Get latest AMI ID
        id: vars
        run: |
          latest_ami=$(aws ec2 describe-images --executable-users self --query 'sort_by(Images, &CreationDate)[-1].ImageId' --output text)
          echo "Latest AMI ID: $latest_ami"

          version_number=$(aws ec2 describe-launch-template-versions --launch-template-name asg_launch_config --query 'sort_by(LaunchTemplateVersions, &VersionNumber)[-1].VersionNumber' --output text)
          echo "Latest AMI version: $version_number"

          echo "latest_ami=$latest_ami" >> $GITHUB_ENV
          echo "version_number=$version_number" >> $GITHUB_ENV

      - name: Create new Launch Template version
        run: |
          aws ec2 create-launch-template-version --launch-template-name asg_launch_config --launch-template-data "ImageId=${{ steps.vars.outputs.latest_ami }}" --source-version ${{ steps.vars.outputs.version_number }}

      - name: Autoscaling group instance refresh
        run: |
          aws autoscaling start-instance-refresh --auto-scaling-group-name my-asg --strategy Rolling --desired-configuration '{"LaunchTemplate": {"LaunchTemplateName":"asg_launch_config", "Version":"$Latest"}}'